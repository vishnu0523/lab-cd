%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
%}

%%
"#include"             { printf("Preprocessor Directive: %s\n", yytext); }
"<[a-zA-Z0-9_.]+>"     { printf("Header File: %s\n", yytext); }
"void|int|float|char"  { printf("Keyword: %s\n", yytext); }
"main"                 { printf("Function Name: %s\n", yytext); }
[a-zA-Z_][a-zA-Z0-9_]* { printf("Identifier: %s\n", yytext); }
[0-9]+                 { printf("Number: %s\n", yytext); }
"="                   { printf("Assignment Operator: %s\n", yytext); }
";"                   { printf("Semicolon: %s\n", yytext); }
"\("                  { printf("Left Parenthesis: %s\n", yytext); }
"\)"                  { printf("Right Parenthesis: %s\n", yytext); }
"{"                   { printf("Left Brace: %s\n", yytext); }
"}"                   { printf("Right Brace: %s\n", yytext); }
"printf"              { printf("Function: %s\n", yytext); }
"\"[^"]*\""          { printf("String Literal: %s\n", yytext); }
"//.*"                { printf("Single Line Comment: %s\n", yytext); }
"/\*([^*]|\*+[^*/])*\*/" { printf("Multi-line Comment: %s\n", yytext); }
.                      ;

%%

int main() {
    yylex();
    return 0;
}

int yywrap() {
    return 1;
}
